// This import applies a global reset to any page that imports this stylesheet.
@import "blueprint/reset";

// To configure blueprint, edit the partials/base.sass file.
@import "partials/base";

// Import all the default blueprint modules so that we can access their mixins.
@import "blueprint";

// Import the non-default scaffolding module.
@import "blueprint/scaffolding";

// To generate css equivalent to the blueprint css but with your
// configuration applied, uncomment:
// @include blueprint

// If you are doing a lot of stylesheet concatenation, it is suggested
// that you scope your blueprint styles, so that you can better control
// what pages use blueprint when stylesheets are concatenated together.
body.bp {
  @include blueprint-typography(true);
  @include blueprint-utilities;
  @include blueprint-debug;
  @include blueprint-interaction;
  // Remove the scaffolding when you're ready to start doing visual design.
  // Or leave it in if you're happy with how blueprint looks out-of-the-box
}

form.bp {
  @include blueprint-form;
  // You'll probably want to remove the scaffolding once you start styling your site.
  @include blueprint-scaffolding;
}

// Page layout can be done using mixins applied to your semantic classes and IDs:
body.two-col {
  #container {
    @include container;
  }
  #header, #footer {
    @include column($blueprint-grid-columns);
  }
  #sidebar {
    // One third of the grid columns, rounding down. With 24 cols, this is 8.
    $sidebar-columns: floor($blueprint-grid-columns / 3);
    @include column($sidebar-columns);
  }
  #content {
    // Two thirds of the grid columns, rounding up.
    // With 24 cols, this is 16.
    $content-columns: ceil(2 * $blueprint-grid-columns / 3);
    // true means it's the last column in the row
    @include column($content-columns, true);
  }
}

$separatorColor: #efefef;
$borderColor: #999999;

$gradientColor: #FFFFFF;
$gradientToColor: darken($gradientColor, 5%);

body {
    background: -webkit-linear-gradient(left, $gradientToColor, $gradientColor, $gradientToColor);
    background: -moz-linear-gradient(left, $gradientToColor, $gradientColor, $gradientToColor);
    background: -o-linear-gradient(left, $gradientToColor, $gradientColor, $gradientToColor);
    background: -ms-linear-gradient(left, $gradientToColor, $gradientColor, $gradientToColor);
    background: linear-gradient(left, $gradientToColor, $gradientColor, $gradientToColor);
}

#friendlist {
    ul {
        background-color: white;
        list-style: none;
        padding: 0;
        margin: 0px;
        margin-left: 80px;
        width: 80%;
    }

    li {
        background-color: white;
        margin-bottom: 5px;
        
        &:hover {
            background-color: #efefef;
            cursor: hand;
        }
    }
    text-decoration: none;
    color: $font-color;
    font-size: 20px;
    border: 1px solid $borderColor;
    border-top-style: hidden;
}

img.friendIcon {
    width: 50px;
    height: 50px;
    padding-right: 50px;
}

#friendSearch {
    height: 50px;
    border-style: solid;
    border-radius: 5px;
    border-color: $borderColor;
    width: 100%;
}

#friendsContainer {
    width: 100%;
    margin: auto;
}

div.listSeparator {
    background-color: $separatorColor;
}

div.userButton {
    display: inline-block;
    width: 70%;
}

div.addFriendButtonDiv {
    .ui-button-text {
        font-size: 0.8em;
    }
    float: right;
    margin-top: 10px;
    width: 30%;
}

div.requestSentNotification {
    padding-top: 12px;
    font-style: italic;
    width: 27%;
    color: lighten($font-color, 50%);
}
