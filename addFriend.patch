diff --git a/nbproject/project.properties b/nbproject/project.properties
index 94429c9..3292ea4 100644
--- a/nbproject/project.properties
+++ b/nbproject/project.properties
@@ -1,4 +1,7 @@
-include.path=${php.global.include.path}
+file.reference.doctrine-lib=vendor/doctrine/lib
+include.path=\
+    ${php.global.include.path}:\
+    ${file.reference.doctrine-lib}
 php.version=PHP_53
 source.encoding=UTF-8
 src.dir=.
diff --git a/src/Wishlist/CoreBundle/DataFixtures/ORM/LoadFriendshipData.php b/src/Wishlist/CoreBundle/DataFixtures/ORM/LoadFriendshipData.php
index 36aa73f..9db57bc 100644
--- a/src/Wishlist/CoreBundle/DataFixtures/ORM/LoadFriendshipData.php
+++ b/src/Wishlist/CoreBundle/DataFixtures/ORM/LoadFriendshipData.php
@@ -31,10 +31,12 @@ class LoadFriendshipData implements FixtureInterface,OrderedFixtureInterface{
         $andrea = $users->getUser('Andrea Coba');
         $steve = $users->getUser('Steven Lac');
         $jorge = $users->getUser('Jorge Thatcher');
+        $rima = $users->getUser('Rima Mardini');
         
         $friendships->addNewFriendship($danny, $andrea);
         $friendships->addNewFriendship($danny, $steve);
         $friendships->addNewFriendship($danny, $jorge);
+        $friendships->addNewFriendship($danny, $rima);
         
         $manager->flush();
     }
diff --git a/src/Wishlist/CoreBundle/DataFixtures/ORM/LoadWishlistItemData.php b/src/Wishlist/CoreBundle/DataFixtures/ORM/LoadWishlistItemData.php
index 1444a01..4b5ecc7 100644
--- a/src/Wishlist/CoreBundle/DataFixtures/ORM/LoadWishlistItemData.php
+++ b/src/Wishlist/CoreBundle/DataFixtures/ORM/LoadWishlistItemData.php
@@ -20,6 +20,7 @@ class LoadWishlistItemData implements FixtureInterface,OrderedFixtureInterface
         $andrea = $userRepo->getUser('Andrea Coba');
         $jorge = $userRepo->getUser('Jorge Thatcher');
         $steve = $userRepo->getUser('Steven Lac');
+        $rima = $userRepo->getUser('Rima Mardini');
         
         $itemRepo->makeWish('purse', 50000, 'www.purse.com', true, 'Bug. this is a purse.', 1, $andrea);
         $itemRepo->makeWish('Bouncy ball', 1000, 'www.bounce.com', true, 'It bounces!', 1, $andrea);
@@ -33,6 +34,9 @@ class LoadWishlistItemData implements FixtureInterface,OrderedFixtureInterface
         
         $itemRepo->makeWish('Lineage II', 5000, 'www.lineage2.com', true, 'Grindin\' till we dyin\'', 1, $jorge);
         $itemRepo->makeWish('Metal Gear Solid Peace Walker', 50000, 'www.mgs.com', true, 'HOOHAW EMOTION', 1, $steve);
+        
+        $itemRepo->makeWish('necklace', 50000, 'www.necklace.com', true, 'Bug. this is a necklace.', 1, $rima);
+        $itemRepo->makeWish('ring', 50000, 'www.ring.com', true, 'Bug. this is a ring.', 1, $rima);
     }
     
     public function getOrder()
diff --git a/src/Wishlist/CoreBundle/DataFixtures/ORM/LoadWishlistUserData.php b/src/Wishlist/CoreBundle/DataFixtures/ORM/LoadWishlistUserData.php
index 367879d..e205832 100644
--- a/src/Wishlist/CoreBundle/DataFixtures/ORM/LoadWishlistUserData.php
+++ b/src/Wishlist/CoreBundle/DataFixtures/ORM/LoadWishlistUserData.php
@@ -21,6 +21,17 @@ class LoadWishlistUserData implements FixtureInterface,OrderedFixtureInterface
         
         $userRepo->addNewUser("Steven", "Lac", new DateTime('6/4/1985'), "stevocpp@gmail.com", WishlistUser::GENDER_MALE, "hullo");
         $userRepo->addNewUser("Jorge", "Thatcher", new DateTime('7/20/1970'), "ndnwarrior777@yahoo.com", WishlistUser::GENDER_MALE, 'yourface');
+        $userRepo->addNewUser("Rima", "Mardini", new DateTime('5/29/1980'), "rmardini@cox.net", WishlistUser::GENDER_FEMALE, 'prada');
+        
+        for($i = 0; $i < 12; $i++)
+        {
+            $first = "Test";
+            $last = "User".$i;
+            $userRepo->addNewUser($first, $last, new DateTime('7/20/1970'), "test@yahoo.com", 
+                    ($i % 2 == 0 )?WishlistUser::GENDER_MALE : WishlistUser::GENDER_FEMALE, "test");
+        }
+        
+        $userRepo->addNewUser("Angie", "Test", new DateTime("08/18/1986"), "angie@yahoo.com", WishlistUser::GENDER_FEMALE, "gongaling");
         
         $manager->flush();
     }
diff --git a/src/Wishlist/CoreBundle/Repository/FriendshipRepository.php b/src/Wishlist/CoreBundle/Repository/FriendshipRepository.php
index e14a960..a3b69fc 100644
--- a/src/Wishlist/CoreBundle/Repository/FriendshipRepository.php
+++ b/src/Wishlist/CoreBundle/Repository/FriendshipRepository.php
@@ -36,17 +36,38 @@ class FriendshipRepository extends EntityRepository
     {
         $userRepo = $this->getEntityManager()->getRepository('WishlistCoreBundle:WishlistUser');
         $friends = $userRepo->getFriendsOf($user);
-        
         $results = array();
         
+        $explodedSearchTerm = explode(" ", $searchTerm);
+        
+        $searchTermCount = count( $explodedSearchTerm );
+        
+        if( strlen($searchTerm) == 0 )
+        {
+            //return all friends if search term doesn't even contain one term.
+            return $friends;
+        }
+        
         foreach ($friends as $friend)
         {
-            $fullname = $friend->getFirstName()." ".$friend->getLastName();
-
-            if( strncmp(strtoupper($fullname), strtoupper($searchTerm), strlen($searchTerm)) == 0 )
+            if( strncmp(strtoupper($friend->getFirstName()), strtoupper($explodedSearchTerm[0]), strlen($explodedSearchTerm[0])) == 0 )
             {
-                $results[] = $friend;
+                if( $searchTermCount > 1 )      //There is a last name to compare against as well
+                {
+                    if( strncmp(strtoupper($friend->getLastName()), strtoupper($explodedSearchTerm[1]), strlen($explodedSearchTerm[1])) == 0 )
+                    {
+                        $results[] = $friend;
+                    }
+                    
+                    //Don't return friend as search term didn't match last name.
+                }
+                else
+                {
+                    $results[] = $friend;
+                }
             }
+            
+            //Don't return friend as search term didn't match first name.
         }
         
         return $results;
diff --git a/src/Wishlist/CoreBundle/Repository/WishlistUserRepository.php b/src/Wishlist/CoreBundle/Repository/WishlistUserRepository.php
index 2b9a738..7a3af3d 100644
--- a/src/Wishlist/CoreBundle/Repository/WishlistUserRepository.php
+++ b/src/Wishlist/CoreBundle/Repository/WishlistUserRepository.php
@@ -5,6 +5,7 @@ namespace Wishlist\CoreBundle\Repository;
 use Doctrine\ORM\EntityRepository;
 use Doctrine\ORM\NoResultException;
 use Wishlist\CoreBundle\Entity\WishlistUser;
+use Doctrine\ORM\Query\ResultSetMapping;
 use \DateTime;
 
 /**
@@ -111,4 +112,34 @@ class WishlistUserRepository extends EntityRepository
         
         return $friends;
     }
+    
+    public function searchPersons(/*string*/ $searchTerm)
+    {
+        if( strlen($searchTerm) == 0 )
+        {
+            return array();
+        }
+        
+        $explodedSearchTerm = explode(' ', $searchTerm);
+        
+        $rsm = new ResultSetMapping();
+        
+        $rsm->addEntityResult('Wishlist\CoreBundle\Entity\WishlistUser', 'u');
+        $rsm->addFieldResult('u', 'wishlistuser_id', 'wishlistuser_id');
+        $rsm->addFieldResult('u', 'firstname', 'firstname');
+        $rsm->addFieldResult('u', 'lastname', 'lastname');
+
+        $sql = "SELECT u.wishlistuser_id, u.firstname, u.lastname FROM WishlistUser u WHERE u.firstname LIKE '".$explodedSearchTerm[0]."%'";
+        
+        //if there is a last name in the search term as well
+        if( count($explodedSearchTerm) > 1 )
+        {
+            $sql .= " AND u.lastname LIKE '".$explodedSearchTerm[1]."%'";
+        }
+        
+        $q = $this->getEntityManager()->createNativeQuery($sql, $rsm);
+        
+        $results = $q->getResult();
+        return $results;
+    }
 }
\ No newline at end of file
diff --git a/src/Wishlist/UserBundle/Controller/DefaultController.php b/src/Wishlist/UserBundle/Controller/DefaultController.php
index 94f55be..f4cffd4 100644
--- a/src/Wishlist/UserBundle/Controller/DefaultController.php
+++ b/src/Wishlist/UserBundle/Controller/DefaultController.php
@@ -70,8 +70,11 @@ class DefaultController extends Controller
         //Search the repository for the search term.
         $friends = $friendshipRepo->searchFriends($user, $searchTerm);
         
+        //Search the user repos for some new friends.
+        $persons = $userRepo->searchPersons($searchTerm);
+        
         //Transform friends into json
-        $results = "[";
+        $results = "{\"friends\":[";
         
         foreach ($friends as $friend)
         {
@@ -80,7 +83,21 @@ class DefaultController extends Controller
         }
         
         $results = rtrim($results, ",");
-        $results .="]";
+        
+        //Search for persons in the user database. If you were wanting to search
+        //for and add your friends this is how you would do it.
+        $results .= "],\"persons\":[";
+        
+        foreach ($persons as $person)
+        {
+            if(!WishlistUser::areFriends($user, $person))
+            {
+                $results .= $person->toJSON().",";
+            }
+        }
+        
+        $results = rtrim($results, ",");
+        $results .="]}";
         
         //Return results.
         
diff --git a/src/Wishlist/UserBundle/Resources/views/Default/friendpage.html.php b/src/Wishlist/UserBundle/Resources/views/Default/friendpage.html.php
index ec1f31f..f0c2484 100644
--- a/src/Wishlist/UserBundle/Resources/views/Default/friendpage.html.php
+++ b/src/Wishlist/UserBundle/Resources/views/Default/friendpage.html.php
@@ -10,23 +10,19 @@
 <div id="friendsContainer">
     <input id="friendSearch" type="text" placeholder="Find People..."/>
     <div id="friendlist">
-        <div class="listSeparator">
+        <div id="friendSeparator" class="listSeparator">
             My Friends
         </div>
-            <div id='div_friendlist_div'>
-            <?php
-                echo "<ul>";
-                foreach($friends as $friend)
-                {
-                    echo "<li><img class='friendIcon' src='".$friend->getProfileUrl()."'/><a href='".$view['router']->generate('WishlistUserBundle_userpage', array('user_id' => $friend->getWishlistuserId()))."'>"
-                            .$friend->getFirstname()." ".$friend->getLastname()."</a></li>\n";
-                }
-                echo "</ul>";
-                ?>
-            </div>
-        <div class="listSeparator">
-            People
+        <div id='div_friendlist_div'>
+        <?php
+            echo "<ul>";
+            foreach($friends as $friend)
+            {
+                echo "<li><img class='friendIcon' src='".$friend->getProfileUrl()."'/><a href='".$view['router']->generate('WishlistUserBundle_userpage', array('user_id' => $friend->getWishlistuserId()))."'>"
+                        .$friend->getFirstname()." ".$friend->getLastname()."</a></li>\n";
+            }
+            echo "</ul>";
+            ?>
         </div>
-        Person one.         +
     </div>
 </div>
diff --git a/web/js/friendpage.js b/web/js/friendpage.js
index a68d99a..50ddf3f 100644
--- a/web/js/friendpage.js
+++ b/web/js/friendpage.js
@@ -1,41 +1,88 @@
-function updateFriendList(friends)
+var searchTimeout = 0.5; //timeout for search box in seconds.
+var timer = 0;
+
+function searchFriends()
 {
-    var friendlist = $('#friendlist ul');
+    var searchTerm = $('#friendSearch').val();
     
-    //Empty out the friendlist
-    friendlist.empty();
+    //make the ajax call to search for friends.
+    $.ajax({
+        type: 'POST',
+        url: '/app_dev.php/FriendSearch',
+        data: {searchTerm: searchTerm},
+        success: function(data, textStatus, jqXHR) {
+            updateFriendList(jQuery.parseJSON(data));
+        }
+    });   
+}
 
-    //Fill in the new friendlist with new friends 
-    for( var i = 0; i < friends.length; i++)
-    {
-        //friendlist.append("<li>" + friends[i].firstName + " "+ friends[i].lastName + "</li>");
-        console.log("<li><img class='friendIcon' src='" + friends[i].profileUrl + "'/><a href='" + Routing.generate('WishlistUserBundle_userpage', {user_id: friends[i].wishlistuser_id}) +"'>" + friends[i].firstName + " " + friends[i].lastName +"</a></li>");
-        friendlist.append("<li><img class='friendIcon' src='" + friends[i].profileUrl + "'/><a href='" + Routing.generate('WishlistUserBundle_userpage', {user_id: friends[i].wishlistuser_id}) +"'>" + friends[i].firstName + " " + friends[i].lastName +"</a></li>");
-    }
+function timerEnd()
+{
+    window.clearTimeout(timer);
 }
 
-function filterFriends(e)
+function timerRestart()
 {
-    var filterTerm = $('#friendSearch').val();
+    timerEnd();
+    timer = window.setTimeout(searchFriends, searchTimeout*1000);
+}
 
-    if( e.keyCode == 13 )
-    {
-        $.ajax({
-            type: 'POST',
-            url: '/app_dev.php/FriendSearch',
-            data: { searchTerm: filterTerm },
-            success: function(data, textStatus, jqXHR) {
-                updateFriendList(jQuery.parseJSON(data));
-            }
+function updateFriendList(results)
+{
+    var friends = results.friends;
+    var persons = results.persons;
+    
+    //Empty out the whole friendlist
+    $('#friendlist').empty();
+
+    if( friends.length >= 1 ) {
+        $('#friendlist').append('<div id="friendSeparator" class="listSeparator">My Friends</div>');
+        $('#friendlist').append('<div id="div_friendlist_div"><ul></ul></div>');
+        
+        friends.forEach(function(friend) {
+            $('#div_friendlist_div ul').append("<li><img class='friendIcon' src='" + friend.profileUrl + "'/><a href='" + Routing.generate('WishlistUserBundle_userpage', {user_id: friend.wishlistuser_id}) +"'>" + friend.firstName + " " + friend.lastName +"</a></li>");
+        });        
+            
+    }
+    
+    if( persons.length >= 1) {
+        $('#friendlist').append('<div id="peopleSeparator" class="listSeparator">People</div>');
+        $('#friendlist').append('<div id="div_personlist_div"><ul></ul></div>');
+        
+        persons.forEach(function(person) {
+            $('#div_personlist_div ul').append("<li><img class='friendIcon' src='" + person.profileUrl + "'/><a href='" + Routing.generate('WishlistUserBundle_userpage', {user_id: person.wishlistuser_id}) +"'>" + person.firstName + " " + person.lastName +"</a></li>");
         });
     }
+    
+    //Finally make all of the newly created search results into button links.
+    createButtonLinks();
 }
 
-$(document).ready(function(){
-    
+function keyTrigger(e)
+{
+    if( (e.keyCode >= 65 && e.keyCode <= 90) || e.keyCode == 8 )
+    {
+        //if it was a normal character just restart the timer for the search.
+        timerRestart();
+    }
+    else if( e.keyCode == 13 )
+    {
+        //If enter was pressed cancel the timer and search for friends.
+        timerEnd();
+        searchFriends();
+    }
+}
+
+function createButtonLinks()
+{
     $('#friendlist ul li').click(function(){
        window.location = $(this).find("a").attr("href");
-    });
+    });    
+}
+
+$(document).ready(function(){
+    
+    createButtonLinks();
     
-    $('#friendSearch').keyup(filterFriends);
+    $('#friendSearch').keyup(keyTrigger);
 });
\ No newline at end of file
