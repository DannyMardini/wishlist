diff --git a/src/Wishlist/CoreBundle/Repository/PurchaseRepository.php b/src/Wishlist/CoreBundle/Repository/PurchaseRepository.php
index da707b1..204ad44 100644
--- a/src/Wishlist/CoreBundle/Repository/PurchaseRepository.php
+++ b/src/Wishlist/CoreBundle/Repository/PurchaseRepository.php
@@ -7,10 +7,8 @@ use Wishlist\CoreBundle\Entity\WishlistUser;
 use Wishlist\CoreBundle\Entity\WishlistItem;
 use Wishlist\CoreBundle\Entity\Item;
 use Wishlist\CoreBundle\Entity\PurchaseEventTypes;
-use Wishlist\CoreBundle\Entity\Purchase;
 use Wishlist\CoreBundle\Entity\Event;
 use Doctrine\ORM\Query\ResultSetMapping;
-use \PDOException;
 
 
 /**
@@ -122,31 +120,35 @@ class PurchaseRepository extends EntityRepository
         return $this->getPurchaseByItemId($item->getId());
     }
     
-    /* TO DO: test this.*/
     public function deletePurchases($purchaseIds, $event_type)
     {
         $em = $this->getEntityManager();
+        $message = "";
         
         foreach ($purchaseIds as $purchaseId)
         {
-            $this->deletePurchase($this->find($purchaseId), $event_type);
+            $message = $message . $this->deletePurchase($this->find($purchaseId), $event_type);
         }
         
-        $em->flush();        
+        $em->flush();
+        return $message;
     }
     
     public function deletePurchase($purchase, $event_type)
     {
-        if(!isset($purchase) || !isset($event_type))
+        $message = (isset($event_type) && isset($purchase)) ? "" : " An invalid purchase and/or event was passed in. Contact the Wishlist Admins for assistance. "; 
+
+        // if there's no message generated, it means the parameters are valid and continue with the delete.
+        if(strlen($message) <= 0)
         {
-            return;
+            $em = $this->getEntityManager();
+            $em->remove($purchase);
+            $em->flush();
+
+            $this->purchaseEventNotification($event_type);
         }
         
-        $em = $this->getEntityManager();
-        $em->remove($purchase);
-        $em->flush();
-        
-        $this->purchaseEventNotification($event_type);
+        return $message;
     }
 
     // TO DO: send notification to user. Explaining why the item was removed from 
diff --git a/src/Wishlist/ListBundle/Controller/ShoppinglistController.php b/src/Wishlist/ListBundle/Controller/ShoppinglistController.php
index 0b476aa..97102aa 100644
--- a/src/Wishlist/ListBundle/Controller/ShoppinglistController.php
+++ b/src/Wishlist/ListBundle/Controller/ShoppinglistController.php
@@ -3,8 +3,7 @@ namespace Wishlist\ListBundle\Controller;
 
 use Symfony\Bundle\FrameworkBundle\Controller\Controller;
 use Symfony\Component\HttpFoundation\Response;
-use Wishlist\CoreBundle\Entity\Purchase;
-use \DateTime;
+use Wishlist\CoreBundle\Entity\PurchaseEventTypes;
 
 class ShoppinglistController extends Controller
 {
@@ -12,15 +11,15 @@ class ShoppinglistController extends Controller
     {
         $request = $this->getRequest()->request;
         $purchaseRepo = $this->getDoctrine()->getRepository('WishlistCoreBundle:Purchase');
-        
         $retractPurchases = $request->get('purchaseIds');
+        $message = "";
         
         if(isset($retractPurchases))
-        {
-            $purchaseRepo->deletePurchases($retractPurchases, PurchaseEventTypes::RemovedFromShoppingList);
+        {            
+            $message = $purchaseRepo->deletePurchases($retractPurchases, PurchaseEventTypes::RemovedFromShoppingList);
         }
         
-        return new Response();
+        return new Response($message);
     }
     
     public function shoppinglistAction(/*int*/ $userId)
diff --git a/src/Wishlist/ListBundle/Resources/views/Default/shoppinglist.html.php b/src/Wishlist/ListBundle/Resources/views/Default/shoppinglist.html.php
index 0397f74..9b3a5c1 100644
--- a/src/Wishlist/ListBundle/Resources/views/Default/shoppinglist.html.php
+++ b/src/Wishlist/ListBundle/Resources/views/Default/shoppinglist.html.php
@@ -1,10 +1,17 @@
 <link href="/css/shoppingList.css" rel="stylesheet" type="text/css" />
 <script type="text/javascript" src="/js/shoppingList.js"></script>
+<script type="text/javascript" src="/js/common.js"></script>
 
-<div id="div_shoppinglist_div">
-    <table>
+<div class="listHeader">     
+    <?php $shoppinglistCount = count($purchases); ?>
+    <label class="shoppinglist-header-label" id="shoppinglist_count_<?php echo $shoppinglistCount ?>">Shopping List ( <?php echo $shoppinglistCount ?> )</label>    
+    <button id='retractPurchaseButton' title='cancel selected item(s)' type='button'></button>
+</div> 
+<hr size="1" width="90%" color="grey">
+
+<div id="shoppinglist">
     <?php
-    $createDateLink = "<a href='#'>New Giftdate!</a>";
+    $createDateLink = "<a href='#'>Set a gift date!</a>";
     
     foreach($purchases as $purchase)
     {
@@ -12,15 +19,15 @@
         $purchasedWishlistItem = $purchase->getItem();
         $purchasedItem = $purchasedWishlistItem->getItem();
         $giftUser = $purchasedWishlistItem->getWishlistUser();
+        $giftId = $purchase->getId();
+        $giftName = $purchasedItem->getName();
 
-        echo "<tr id='".$purchase->getId()."'>";
-        echo "<td>".$purchasedItem->getName()."</td>";
-        echo "<td>".$giftUser->getFirstname()." ".$giftUser->getLastname()."</td>";
-        echo "<td>".(isset($giftDate)? $giftDate->format('d/m/Y'):$createDateLink)."</td>";
-        echo "<td><input type='checkbox'/></td>";
-        echo "</tr>";
+        echo "<div title='Click to select item' class='shoppinglistItem' id='".$giftId."'> ";
+        echo "<input class='selectItem' type='checkbox' />";
+        echo "<label>Item:</label><div class='name itemDetail' >".$giftName."</div>"; 
+        echo "<label>For:</label><div class='itemDetail' >".$giftUser->getFirstname()."</div>";
+        echo "<label>Date Due:</label><div class='itemDetail'>".(isset($giftDate)? $giftDate->format('d/m/Y'):$createDateLink)."</div>";
+        echo "</div>";
     }
     ?>
-    </table>
-    <button id='retractPurchaseButton' type='button'>Cancel purchases</button>
 </div>
\ No newline at end of file
diff --git a/src/Wishlist/UserBundle/Resources/views/Default/shoppinglistPage.html.php b/src/Wishlist/UserBundle/Resources/views/Default/shoppinglistPage.html.php
index 9f3f5a4..c332572 100644
--- a/src/Wishlist/UserBundle/Resources/views/Default/shoppinglistPage.html.php
+++ b/src/Wishlist/UserBundle/Resources/views/Default/shoppinglistPage.html.php
@@ -1,7 +1,5 @@
 <?php 
 $view->extend('::navBar.html.php');
 
-echo "The Shopping List!";
-
 echo $view['actions']->render('WishlistListBundle:Shoppinglist:shoppinglist', array('userId' => $userId)); 
 ?>
diff --git a/web/css/lifeEventsManager.css b/web/css/lifeEventsManager.css
index fa6a525..bb171f3 100644
--- a/web/css/lifeEventsManager.css
+++ b/web/css/lifeEventsManager.css
@@ -1,24 +1,3 @@
-/* i think these are not used 
-.lifeEventDiv label{
-    display:block;
-    float: none;
-    width: 100%;
-    height: 25px;
-}
-
-.lifeEventDiv select {
-    margin-top: 5px;height: 5%;margin-right:5px;width:19%;
-}
-
-.lifeEventDiv .eventname{
-    margin-right:5px;width:50%;
-}
-
-.lifeEventDiv .datepicker {
-    margin-right:5px;width:18%;
-}
-*/
-
 label {
     float: left;
     display: inline-block;
@@ -46,11 +25,7 @@ label {
 }
 
 #EventList .image {
-/*    display: inline-block;*/
     float: left;
-   
-    /*background-image: url(/images/default_avatar.gif);
-    background-size: 85%;*/
     background-repeat: no-repeat;
     background-position: left;
     margin-top: 15px;
@@ -71,7 +46,6 @@ label {
     text-align: center;
     font-size: 14px;
     padding-left: 5px;
-/*    float: right;*/
 }
 
 #EventList .message {
diff --git a/web/css/shoppingList.css b/web/css/shoppingList.css
index af26da6..d7862e4 100644
--- a/web/css/shoppingList.css
+++ b/web/css/shoppingList.css
@@ -1,21 +1,60 @@
-#div_shoppinglist_div ul
+
+#shoppinglist {
+    border: 1px solid black; 
+    width: 80%;
+    height: 50%;
+    margin: 10%;
+    margin-top: 2%;
+} 
+
+#shoppinglist ul
 {
     list-style: none;
-    padding-left: 5%;
+    padding-left: 15%;
 }
 
-#div_shoppinglist_div table
-{
-    padding-left: 5%;
-    border-spacing: 0px;
+.listHeader{
+    font-size: 28px;
+    font-weight:bold;
+    padding-top: 10px;
+    padding-left: 60px;
 }
 
-#div_shoppinglist_div td
-{
-    padding: 5px 20px;
+.shoppinglistItem label{
+    margin-left: 10px;
+    margin-right: 3px;
+    font-size: 20px;
+    font-family: Satisfy, cursive;
 }
 
-#div_shoppinglist_div table tr.selected
-{
-    background-color: #00aa00;
+.shoppinglist-header-label {
+    float: left;
+    display: inline-block;
+    width: 250px;
+    font-family: Satisfy, cursive;
+}
+
+.itemDetail {
+    display: inline-block;
+    font-size: 16px;
+    text-align: center;
+    margin-top: 15px;
+    margin-bottom: 15px;
 }
+
+#shoppinglist .shoppinglistItem {
+    padding: 5px;
+    border-bottom: solid 1px #EFEFEF;
+}
+
+.focusPurchase {
+    background-color:#EFEFEF;
+}
+
+.unfocusPurchase {
+    background-color: gray;    
+}
+
+#retractPurchaseButton {
+    width: 1em;
+}
\ No newline at end of file
diff --git a/web/js/common.js b/web/js/common.js
index 52553ee..ca60ce4 100644
--- a/web/js/common.js
+++ b/web/js/common.js
@@ -30,6 +30,24 @@ function get_nth_suffix(date) {
   }
 }
 
+/* POST: ajax call
+ * TO DO: have other ajax call this generic method instead
+ * */
+function ajaxPost(data, url, onSuccessCallback, callBackParams)
+{
+    $.ajax({
+        type: 'POST',
+        url: url,
+        data: data,
+        success: function(response) { 
+            if(onSuccessCallback)
+            {
+                onSuccessCallback.call(null, response, callBackParams);
+            }
+        }
+    });    
+}
+
 /*
  * Type can be either 'Event' or 'Date'
  */
diff --git a/web/js/shoppingList.js b/web/js/shoppingList.js
index c42617e..60a90c9 100644
--- a/web/js/shoppingList.js
+++ b/web/js/shoppingList.js
@@ -1,35 +1,179 @@
-function setupPage()
-{
-    $('#div_shoppinglist_div table tr td input').click(function(){
-        var row = $(this).parents('tr')
-        
-        if(row.hasClass('selected')){
-            row.removeClass('selected');
-        }else{
-            row.addClass('selected');
-        }
+
+/* Add initialization of other controls here */
+$(document).ready(function(){
+    createGUIButtons();
+    createEventHandlers();
+    toggleRetractButton(); // hide or show the 'cancel purchase' button
+    updateList(); // displays a special message if the shopping list is empty
+    createGUIDialogs();
+});
+
+function createGUIButtons(){
+    // click event handler for the 'cancel purchase' aka:'retract' button
+    $('#retractPurchaseButton').button({
+            icons: {
+                primary: "ui-icon-minusthick"
+            },
+            text: false
+    }).click(retractPurchaseEvent);
+}
+
+function createEventHandlers(){
+    // click event handler for the purchase items
+    $('.shoppinglistItem').click(function(){
+        $(this).toggleClass('selected');
+        var chkBox = $('.selectItem', this);
+        chkBox.attr("checked", !chkBox.attr("checked"));        
     });
+    
+    applyItemHoverHandler($('.shoppinglistItem'));
 }
 
-function retractPurchaseEvent()
+// hide the cancel purchases button if there are no more purchases in the list
+function toggleRetractButton()
+{
+    var retractButton = $('#retractPurchaseButton');
+    var purchaseDivs = $('#shoppinglist .shoppinglistitem');            
+    purchaseDivs.length <= 0 ? retractButton.hide() : retractButton.show();    
+}
+
+function updateList()
 {
-    var selectedPurchases = $('.selected','#div_shoppinglist_div table');
-    var retractedPurchases = new Array();
-    for(var p = 0; p < selectedPurchases.length; p++)
+    if($('.shoppinglistitem').length <= 0)
     {
-        retractedPurchases.push(selectedPurchases[p].id);
+        $('#shoppinglist').html('Your shoppinglist is empty! Browse your friends wishlists to see what they want!');
     }
+}
+
+function createGUIDialogs()
+{
+    $('#dialog-message').dialog({
+        autoOpen: false,
+        resizable: false,
+        height:330,
+        modal:true,
+        buttons: {
+            "Ok": function(){
+                $(this).dialog("close");
+            }
+        }
+    });     
+}
+
+function applyItemHoverHandler(selector){
+    $(selector).hover(function(){
+        onEventHoverHandler(this);
+    }, function(){
+        onEventHoverOutHandler(this);        
+    });    
+}
+
+function onEventHoverOutHandler(obj)
+{
+    $(obj).removeClass('focusPurchase');
+}
+
+function onEventHoverHandler(obj)
+{
+    $(obj).addClass('focusPurchase');
+}
+
+function retractPurchaseEvent()
+{
+    // confirm that this is what the user wants to do
+    //if(!confirm("Are you sure you want to remove the selected purchases?")) return;
     
-    selectedPurchases.remove();
-    
-    $.ajax({
-        type: 'POST',
-        url: '/app_dev.php/retractPurchases',
-        data: {purchaseIds: retractedPurchases}
+  
+    confirm('Are you sure you want to remove the selected purchases?')
+    .then(function (answer) {//then will run if 1 (Yes) or 0 (No) is clicked
+        if(answer == 1) // 1 means continue
+        {
+            continueRemovingItems();
+        }
     });
 }
 
-$(document).ready(function(){
-    setupPage();
-    $('#retractPurchaseButton').click(retractPurchaseEvent);
-});
\ No newline at end of file
+function continueRemovingItems()
+{
+    var selectedPurchaseDivs = $('.selected','#shoppinglist'); 
+    var selectedPurchaseIds = selectedPurchaseDivs.map(function() { return this.id; }).get();
+    var purchaseData = { purchaseIds: selectedPurchaseIds};
+    ajaxPost(purchaseData, '/app_dev.php/retractPurchases', finishRetractPurchaseEvent, selectedPurchaseDivs);    
+}
+
+function finishRetractPurchaseEvent(response, selectedPurchaseDivs){
+    if(response == null) return;
+    
+    // if an empty string was returned it means that no errors occurred.
+    // Remove the canceled items from the list and properly hide 
+    // the 'cancel purchase' button if there are zero items left in the list
+    if(response.length <= 0){
+        
+        // update count
+        updateItemCount(selectedPurchaseDivs.length);
+        
+        // remove divs
+        selectedPurchaseDivs.remove();
+        updateList();
+        
+        // update the 'cancel items' button
+        toggleRetractButton();
+    }
+    else { // display the error if any occurred        
+        popupMessage('An Issue Occurred!','<p>'+response+'</p>');
+    }
+}
+
+function popupMessage(theTitle, message)
+{    
+    $('<div>' + message + '</div>').dialog({
+             autoOpen: true,
+             close: function () { 
+                 $(this).dialog('destroy');
+             },
+             title: theTitle,
+             buttons: {
+                 "Ok": function() {
+                     $( this ).dialog( "close" );
+                 }
+             }
+         });    
+}
+
+function updateItemCount(itemsRemoved)
+{
+    var shoppingListHeader = $('.shoppinglist-header-label');
+    var currCount = parseInt(shoppingListHeader.attr('id').split('_')[2]);
+    var newCount = currCount - itemsRemoved;
+
+    if( newCount < 0 )
+    {
+        newCount = 0;
+    }
+
+    shoppingListHeader
+        .attr('id', 'shoppinglist_count_' + newCount)
+        .text('Shopping List ( ' + newCount + ' )');
+}
+
+function confirm (confirmMessage) {
+    var defer = $.Deferred(); 
+    $('<div>' + confirmMessage + '</div>').dialog({
+            autoOpen: true,
+            close: function () { 
+                $(this).dialog('destroy');
+            },
+            title: 'Continue?',
+            buttons: {
+                "Yes": function() {
+                    defer.resolve(1); //on Yes click, end deferred state successfully with 1 value
+                    $( this ).dialog( "close" );
+                },
+                "No": function() {
+                    defer.resolve(0); //on No click end deferred successfully with 0 value
+                    $( this ).dialog( "close" );
+                }
+            }
+        });
+    return defer.promise(); //important to return the deferred promise
+}
\ No newline at end of file
