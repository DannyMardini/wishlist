<?php

/**
 * EventTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class EventTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object EventTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Event');
    }
    
    public function getUpcomingEvents($userId)
    {
         $q = Doctrine_Query::create() 
                ->select("e.event_date, e.wishlistuser_id, e.event_type, concat(usr.firstname,' ',usr.lastname) as fullname")
                ->from('Event e')
                ->leftJoin('e.WishlistUser usr') 
                ->where('MONTH(curdate()) =  MONTH(e.event_date) and DAY(curdate()) >= (DAY(e.event_date)-7) and DAY(curdate()) <= DAY(e.event_date) and e.wishlistuser_id IN ( select userb_id from friendships where usera_id = ?)',$userId)               
                ->orderBy('event_date desc');
        
        $t = $q->getSqlQuery();
       
        $events = $q->execute();
        
        $jsonData = $this->exportEventData($events); 
        
        return $jsonData;
    }
    
    public function exportEventData($events)
    {            
        $eventsData = $events->getData();       
               
        $tempObj;
        $jsonString = "{\"events\":[";
        
        for ($i = 0; $i < sizeof($eventsData); $i++) {
            
            $tempObj = $eventsData[$i]->getData();
            $tempObj["fullname"] = $eventsData[$i]->fullname;
            $tempObj["eventdate"] = $eventsData[$i]->getFormattedTimestamp();
            $jsonString = $jsonString.json_encode($tempObj);
            
            if(!(($i + 1) == sizeof($eventsData)))
                $jsonString = $jsonString.",";
        }
        
        $jsonString = $jsonString."]}";
        
        return $jsonString;
    }
}